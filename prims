#include <iostream>
#include <iomanip>
using namespace std;

class tree
{
    int a[20][20], u, v, n, i, j, e, w, visited[20];

public:
    void input();
    void display();
    void minimum();
};

void tree::input()
{
    cout << "\nEnter the no. of nodes: ";
    cin >> n;

    for (i = 1; i <= n; i++)
    {
        visited[i] = 0;
        for (j = 1; j <= n; j++)
        {
            a[i][j] = 999;
        }
    }

    cout << "\nEnter the no. of edges: ";
    cin >> e;

    for (i = 0; i < e; i++)
    {
        cout << "\n______________________________________";
        cout << "\nEnter the edges in pair (u,v): ";
        cin >> u >> v;
        cout << "\nEnter the phone company charges for this connection:  ";
        cin >> w;
        a[u][v] = a[v][u] = w;
    }
}

void tree::display()
{
    cout << "\nAdjacency matrix:\n";
    for (i = 1; i <= n; i++)
    {
        for (j = 1; j <= n; j++)
        {
            cout << setw(5) << a[i][j] << "   ";
        }
        cout << endl;
    }
}

void tree::minimum()
{
    int total = 0;
    visited[1] = 1;

    for (int count = 1; count < n; count++)
    {
        int min = 999, p = -1, q = -1;

        for (i = 1; i <= n; i++)
        {
            if (visited[i] == 1)
            {
                for (j = 1; j <= n; j++)
                {
                    if (visited[j] != 1 && a[i][j] < min)
                    {
                        min = a[i][j];
                        p = i;
                        q = j;
                    }
                }
            }
        }

        visited[q] = 1;
        total += min;

        cout << "\nMinimum cost connection is " << p << " -> " << q << " with charge: " << min << endl;
    }

    cout << "\nThe minimum total cost of connections of all branches is: " << total << endl;
}

int main()
{
    tree t;
    t.input();
    t.display();
    t.minimum();
    return 0;
}
